default:
  image: ghcr.io/zazuko/deploy-image:v1.4

stages:
  - sync
  - build
  - push

# push to the the GitHub repository
sync:
  stage: sync
  script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh/
    - cp "${GITHUB_DEPLOY_KEY_PRIVATE}" ~/.ssh/id_ed25519
    - cp "${GITHUB_DEPLOY_KEY_PUBLIC}" ~/.ssh/id_ed25519.pub
    - git remote add github git@github.com:Staatsarchiv-Basel-Stadt/RDF-Pipeline.git
    - git push github master
    - git push github master --tags
  only:
    - master

# build Docker image
build:
  stage: build

  artifacts:
    paths:
      - image.tar

  script:
    # import all credentials
    - mkdir -p credentials
    - cp "${FILE_SCOPE_VIRTUAL_PROPERTIES}" credentials/scope-virtual.properties
    - cp "${FILE_SSH_CONFIG}" credentials/ssh-config
    - cp "${FILE_ID_RSA}" credentials/id_rsa
    - cp "${FILE_ID_RSA_PUB}" credentials/id_rsa.pub
    - cp "${FILE_NETRC}" credentials/netrc
    - cp "${FILE_ENVIRONMENT}" credentials/environment

    # login to the registry
    - crane auth login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

    # build Docker image
    - |
      executor \
        --context="$CI_PROJECT_DIR" \
        --dockerfile=Dockerfile \
        --destination="$CI_REGISTRY_IMAGE" \
        --build-arg="BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
        --build-arg="COMMIT=$CI_COMMIT_SHA" \
        --build-arg="VERSION=$CI_COMMIT_REF_SLUG" \
        --no-push \
        --tarPath="$CI_PROJECT_DIR/image.tar"

# push Docker image
push:
  stage: push

  needs:
    - job: build
      artifacts: true

  variables: # We don't need the sources for that
    GIT_STRATEGY: none

  script:
    - crane auth login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - gitlab-docker-push image.tar "$CI_REGISTRY_IMAGE"
